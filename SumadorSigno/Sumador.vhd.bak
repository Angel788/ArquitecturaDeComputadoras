library ieee;
library work;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use work.all;

entity sumador is 
	port (
		a: in std_logic_vector(0 TO 5);
		b: in std_logic_vector(0 TO 5);
		clk:in std_logic;
		s:out std_logic_vector(0 to 5);
		signos: out std_logic
	);
end sumador;

architecture sum of sumador is
	 signal sumador,restador1,restador2: std_logic_vector(0 TO 5);
	 sginal registro1,registro2,registro1n,registro2n: std_logic_vector(0 to 5);
	 signal may:std_logic_vector(0 to 2);
begin
    registronumero1: registroNumero port map(
	     data => sing1,
		  clk => clk,
		  readdata=> registro1,
		  readdatan => registro1n
	 );
	 registronumero1: registroNumero port map(
	     data => sign1,
		  clk => clk,
		  readdata=> registro1,
		  readdatan => registro1n
	 );
    comparador1:comparador port map(
	    numero1 => registro1,
		 numero2 => registro2,
		 cmp1 =>may(0),
		 cmp2 =>may(1)
	 );
	 sumador1:sumadorV port map(
	    a=> registro1(1)+regristro1(2)+registro1(3)+registro1(4);
		 b => registro21(1)+regristro2(2)+registro2(3)+registro2(4);
		 s => sumador
	 );
	 restador1:restadorV port map(
	    a=> registro1(1)+regristro1(2)+registro1(3)+registro1(4);
		 b => registro2(1)+regristro2(2)+registro2(3)+registro2(4);
		 s => restador1
	 );
	 restador2:restadorV port map(
	    a=> registro2(1)+regristro2(2)+registro2(3)+registro2(4);
		 b => registro1(1)+regristro1(2)+registro1(3)+registro1(4);
		 s => restador2
	 )
	 sumarnums: process(cmp1)
	 begin 
	      if(may="00") then
			   s<=sumador;
		      signos<=registro1(0);		
			else if(may="10")then
			    if(registro1(0) xor registro2(0))then
				     s<=restador1;
					  signos<=registro1(0);
				 else 
				    s<=sumador1:
					 signos<=registr1(0);
				 end if;
			else 
			    if(registro1(0) xor registro2(0))then
				     s<=restador2;
					  signos<=registro2(0);
				 else 
				    s<=sumador1:
					 signos<=registro2(0);
				 end if;
			end if;
	 end process;
end sum; 